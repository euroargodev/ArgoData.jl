var documenterSearchIndex = {"docs":
[{"location":"#ArgoData.jl","page":"Home","title":"ArgoData.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This package is at a very early stage of development. Stay tuned ...","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [MITprof,GDAC,ArgoTools]\nOrder   = [:type,:function]","category":"page"},{"location":"#ArgoData.MITprof.MITprof_read","page":"Home","title":"ArgoData.MITprof.MITprof_read","text":"MITprof_read(f::String=\"MITprof/MITprof_mar2016_argo9506.nc\")\n\nStandard Depth Argo Data Example.\n\nHere we read the MITprof standard depth data set from https://doi.org/10.7910/DVN/EE3C40 For more information, please refer to Forget, et al 2015 (http://dx.doi.org/10.5194/gmd-8-3071-2015) The produced figure shows the number of profiles as function of time for a chosen file     and maps out the locations of Argo profiles collected for a chosen year.\n\nusing ArgoData, Plots\n\nfi=\"MITprof/MITprof_mar2016_argo9506.nc\"\n(lo,la,ye)=MITprof.MITprof_read(fi)\n\nh = histogram(ye,bins=20,label=fi[end-10:end],title=\"Argo profiles\")\n\nye0=2004; ye1=ye0.+1\nkk=findall((ye.>ye0) .* (ye.<ye1))\nscatter(lo[kk],la[kk],label=fi[end-10:end],title=\"Argo profiles count\")\n\n\n\n\n\n","category":"function"},{"location":"#ArgoData.MITprof.MITprof_write-Tuple{Dict, Array, Array}","page":"Home","title":"ArgoData.MITprof.MITprof_write","text":"MITprof.MITprof_write(meta,profiles,profiles_std;path=\"\")\n\nWrite to file.\n\nMITprof.MITprof_write(meta,profiles,profiles_std)\n\n\n\n\n\n","category":"method"},{"location":"#ArgoData.MITprof.loop","page":"Home","title":"ArgoData.MITprof.loop","text":"loop(pth::String=\"profiles/\")\n\nStandard Depth Argo Data Collection – see ?MITprof.read for detail.\n\n\n\n\n\n","category":"function"},{"location":"#ArgoData.GDAC.Argo_float_download","page":"Home","title":"ArgoData.GDAC.Argo_float_download","text":"Argo_float_download(list_files,ii=1,suff=\"prof\",ftp=missing)\n\nDownload one Argo file for float ranked ii in list_files  from GDAC server (ftp://ftp.ifremer.fr/ifremer/argo/dac/ by default) to a temporary folder (joinpath(tempdir(),\"Argo_DAC_files\")). By default suff=\"prof\" means we'll download the file that contains  the profile data (e.g. 13857_prof.nc for ii=1 with wmo=13857).  Other possible choices for suff: \"meta\", \"Rtraj\", \"tech\". If the ftp argument is omitted or isa(ftp,String) then Downloads.download is used.  If, alternatively, isa(ftp,FTP) then FTPClient.download is used.\n\nExample :\n\nusing ArgoData\nlist_files=GDAC.Argo_float_files()\nGDAC.Argo_float_download(list_files,10000)\n\nftp=\"ftp://usgodae.org/pub/outgoing/argo/dac/\"\nGDAC.Argo_float_download(list_files,10000,\"meta\",ftp)\n\n\n\n\n\n","category":"function"},{"location":"#ArgoData.GDAC.Argo_float_files-Tuple{String}","page":"Home","title":"ArgoData.GDAC.Argo_float_files","text":"Argo_float_files(fil::String)\n\nGet list of Argo float files from csv file with columns two columns – folder and wmo.\n\nusing ArgoData\nfil=\"https://gaelforget.github.io/OceanRobots.jl/dev/examples/Argo_float_files.csv\"\nGDAC.Argo_float_files(fil)\n\n\n\n\n\n","category":"method"},{"location":"#ArgoData.GDAC.Argo_float_files-Tuple{}","page":"Home","title":"ArgoData.GDAC.Argo_float_files","text":"Argo_float_files()\n\nGet list of Argo float files from Ifremer GDAC server      ftp://ftp.ifremer.fr/ifremer/argo/dac/\n\nusing ArgoData\nGDAC.Argo_float_files()\n\n\n\n\n\n","category":"method"},{"location":"#ArgoData.GDAC.wget_geo-Tuple{String, Int64, Int64}","page":"Home","title":"ArgoData.GDAC.wget_geo","text":"wget_geo(b::String,y::Int,m::Int)\n\nDownload, using wget, Argo data files for one regional domain (b), year (y), and month (m) from the GDAC FTP server (ftp://ftp.ifremer.fr/ifremer/argo or, equivalently, ftp://usgodae.org/pub/outgoing/argo).\n\nb=\"atlantic\"; yy=2009:2009; mm=8:12;\nfor y=yy, m=mm;\n    println(\"$b/$y/$m\"); GDAC.wget_geo(b,y,m)\nend\n\n\n\n\n\n","category":"method"},{"location":"#ArgoData.ArgoTools.GetOneProfile-Tuple{Any, Any}","page":"Home","title":"ArgoData.ArgoTools.GetOneProfile","text":"GetOneProfile(m)\n\nGet one profile from netcdf file.\n\n\n\n\n\n","category":"method"},{"location":"#ArgoData.ArgoTools.mitprof_interp_setup-Tuple{String}","page":"Home","title":"ArgoData.ArgoTools.mitprof_interp_setup","text":"mitprof_interp_setup(fil::String)\n\nGet parameters etc from yaml file (fil).\n\n\n\n\n\n","category":"method"},{"location":"#ArgoData.ArgoTools.monthly_climatology_factors-Tuple{Any}","page":"Home","title":"ArgoData.ArgoTools.monthly_climatology_factors","text":"monthly_climatology_factors(date)\n\nif date is a date in days since DateTime(0)\n\nand ff(rec) returns a value for month rec in 1:12\n\nthen compute the factors to interpolate from rec[1],rec[2] to date.\n\nFor example :\n\nff(x)=sin((x-0.5)/12*2pi)\nfac,rec=monthly_climatology_factors(prof[\"date\"])\n\ngg=fac[1]*ff(rec[1])+fac[2]*ff(rec[2])\n(ff(rec[1]),gg,ff(rec[2]))\n\n\n\n\n\n","category":"method"},{"location":"#ArgoData.ArgoTools.prof_PtoZ!-Tuple{Any}","page":"Home","title":"ArgoData.ArgoTools.prof_PtoZ!","text":"prof_PtoZ!(prof)\n\nConvert prof[\"p\"] to prof[\"depth\"]\n\n\n\n\n\n","category":"method"},{"location":"#ArgoData.ArgoTools.prof_TtoΘ!-Tuple{Any}","page":"Home","title":"ArgoData.ArgoTools.prof_TtoΘ!","text":"prof_TtoΘ!(prof)\n\nConvert prof[\"T\"] to potential temperature\n\n\n\n\n\n","category":"method"},{"location":"#ArgoData.ArgoTools.prof_convert!-Tuple{Any, Any}","page":"Home","title":"ArgoData.ArgoTools.prof_convert!","text":"prof_convert!(prof,meta)\n\nAppply conversions to variables (lon,lat,depth,temperature) in prof if specified in meta.\n\n\n\n\n\n","category":"method"},{"location":"#ArgoData.ArgoTools.prof_interp!-Tuple{Any, Any, Any}","page":"Home","title":"ArgoData.ArgoTools.prof_interp!","text":"prof_interp!(prof,meta)\n\nInterpolate from prof[\"depth\"] to meta[\"z_std\"]\n\n\n\n\n\n","category":"method"},{"location":"#ArgoData.ArgoTools.sw_adtg-Tuple{Any, Any, Any}","page":"Home","title":"ArgoData.ArgoTools.sw_adtg","text":"sw_adtg(S,T,P)\n\nCalculate adiabatic temperature gradient as per UNESCO 1983 routines from salinity (S; in psu), in situ temperature (T; in °C), and pressure (P; in decibar)\n\nadtg = sw_adtg(S,T,P)\n\n\n\n\n\n","category":"method"},{"location":"#ArgoData.ArgoTools.sw_dpth-Tuple{Any, Any}","page":"Home","title":"ArgoData.ArgoTools.sw_dpth","text":"sw_dpth(P,LAT)\n\nCalculate depth in meters from pressure (P; in decibars) and latitude (LAT; in °N)\n\nd = sw_dpth(100.0,20.0)\n\n\n\n\n\n","category":"method"},{"location":"#ArgoData.ArgoTools.sw_ptmp","page":"Home","title":"ArgoData.ArgoTools.sw_ptmp","text":"sw_ptmp(S,T,P,PR)\n\nCalculate potential temperature as per UNESCO 1983 report from salinity (S; in psu), in situ temperature (T; in °C), and pressure (P; in decibar) relative to PR (in decibar; 0 by default).\n\nptmp = sw_ptmp(S,T,P,PR=missing)\n\n\n\n\n\n","category":"function"}]
}
